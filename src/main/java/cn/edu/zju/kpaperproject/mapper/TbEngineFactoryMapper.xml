<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.TbEngineFactoryMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.TbEngineFactory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="experiments_number" property="experimentsNumber" jdbcType="INTEGER" />
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER" />
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR" />
    <result column="engine_factory_location_g_x" property="engineFactoryLocationGX" jdbcType="DOUBLE" />
    <result column="engine_factory_location_g_y" property="engineFactoryLocationGY" jdbcType="DOUBLE" />
    <result column="engine_factory_alive" property="engineFactoryAlive" jdbcType="BIT" />
    <result column="engine_factory_alive_times" property="engineFactoryAliveTimes" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, experiments_number, cycle_times, engine_factory_id, engine_factory_location_g_x, 
    engine_factory_location_g_y, engine_factory_alive, engine_factory_alive_times
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_engine_factory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_engine_factory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_engine_factory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryExample" >
    delete from tb_engine_factory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactory" >
    insert into tb_engine_factory (id, experiments_number, cycle_times, 
      engine_factory_id, engine_factory_location_g_x, 
      engine_factory_location_g_y, engine_factory_alive, 
      engine_factory_alive_times)
    values (#{id,jdbcType=INTEGER}, #{experimentsNumber,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, 
      #{engineFactoryId,jdbcType=VARCHAR}, #{engineFactoryLocationGX,jdbcType=DOUBLE}, 
      #{engineFactoryLocationGY,jdbcType=DOUBLE}, #{engineFactoryAlive,jdbcType=BIT}, 
      #{engineFactoryAliveTimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactory" >
    insert into tb_engine_factory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="experimentsNumber != null" >
        experiments_number,
      </if>
      <if test="cycleTimes != null" >
        cycle_times,
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id,
      </if>
      <if test="engineFactoryLocationGX != null" >
        engine_factory_location_g_x,
      </if>
      <if test="engineFactoryLocationGY != null" >
        engine_factory_location_g_y,
      </if>
      <if test="engineFactoryAlive != null" >
        engine_factory_alive,
      </if>
      <if test="engineFactoryAliveTimes != null" >
        engine_factory_alive_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="experimentsNumber != null" >
        #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="engineFactoryLocationGX != null" >
        #{engineFactoryLocationGX,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryLocationGY != null" >
        #{engineFactoryLocationGY,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryAlive != null" >
        #{engineFactoryAlive,jdbcType=BIT},
      </if>
      <if test="engineFactoryAliveTimes != null" >
        #{engineFactoryAliveTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryExample" resultType="java.lang.Integer" >
    select count(*) from tb_engine_factory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_engine_factory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.experimentsNumber != null" >
        experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null" >
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryId != null" >
        engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.engineFactoryLocationGX != null" >
        engine_factory_location_g_x = #{record.engineFactoryLocationGX,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryLocationGY != null" >
        engine_factory_location_g_y = #{record.engineFactoryLocationGY,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryAlive != null" >
        engine_factory_alive = #{record.engineFactoryAlive,jdbcType=BIT},
      </if>
      <if test="record.engineFactoryAliveTimes != null" >
        engine_factory_alive_times = #{record.engineFactoryAliveTimes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_engine_factory
    set id = #{record.id,jdbcType=INTEGER},
      experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      engine_factory_location_g_x = #{record.engineFactoryLocationGX,jdbcType=DOUBLE},
      engine_factory_location_g_y = #{record.engineFactoryLocationGY,jdbcType=DOUBLE},
      engine_factory_alive = #{record.engineFactoryAlive,jdbcType=BIT},
      engine_factory_alive_times = #{record.engineFactoryAliveTimes,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactory" >
    update tb_engine_factory
    <set >
      <if test="experimentsNumber != null" >
        experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="engineFactoryLocationGX != null" >
        engine_factory_location_g_x = #{engineFactoryLocationGX,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryLocationGY != null" >
        engine_factory_location_g_y = #{engineFactoryLocationGY,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryAlive != null" >
        engine_factory_alive = #{engineFactoryAlive,jdbcType=BIT},
      </if>
      <if test="engineFactoryAliveTimes != null" >
        engine_factory_alive_times = #{engineFactoryAliveTimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactory" >
    update tb_engine_factory
    set experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      cycle_times = #{cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      engine_factory_location_g_x = #{engineFactoryLocationGX,jdbcType=DOUBLE},
      engine_factory_location_g_y = #{engineFactoryLocationGY,jdbcType=DOUBLE},
      engine_factory_alive = #{engineFactoryAlive,jdbcType=BIT},
      engine_factory_alive_times = #{engineFactoryAliveTimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO tb_engine_factory (id, experiments_number, cycle_times,
      engine_factory_id, engine_factory_location_g_x,
      engine_factory_location_g_y, engine_factory_alive,
      engine_factory_alive_times)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (NULL,  #{item.experimentsNumber,jdbcType=INTEGER}, #{item.cycleTimes,jdbcType=INTEGER},
      #{item.engineFactoryId,jdbcType=VARCHAR}, #{item.engineFactoryLocationGX,jdbcType=DOUBLE},
      #{item.engineFactoryLocationGY,jdbcType=DOUBLE}, #{item.engineFactoryAlive,jdbcType=BIT},
      #{item.engineFactoryAliveTimes,jdbcType=INTEGER})
    </foreach>
  </insert>

</mapper>