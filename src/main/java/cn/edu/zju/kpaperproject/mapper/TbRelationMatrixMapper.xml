<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.TbRelationMatrixMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.TbRelationMatrix">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="experiments_number" property="experimentsNumber" jdbcType="INTEGER"/>
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER"/>
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR"/>
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR"/>
    <result column="map_key" property="mapKey" jdbcType="VARCHAR"/>
    <result column="relation_score" property="relationScore" jdbcType="DOUBLE"/>
    <result column="initial_relational_degree" property="initialRelationalDegree" jdbcType="DOUBLE"/>
    <result column="accumulative_total_score" property="accumulativeTotalScore" jdbcType="INTEGER"/>
    <result column="transaction_number" property="transactionNumber" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, experiments_number, cycle_times, engine_factory_id, supplier_id, map_key, relation_score, 
    initial_relational_degree, accumulative_total_score, transaction_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrixExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from tb_relation_matrix
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from tb_relation_matrix
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from tb_relation_matrix
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrixExample">
    delete from tb_relation_matrix
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrix">
    insert into tb_relation_matrix (id, experiments_number, cycle_times,
                                    engine_factory_id, supplier_id, map_key,
                                    relation_score, initial_relational_degree, accumulative_total_score,
                                    transaction_number)
    values (#{id,jdbcType=INTEGER}, #{experimentsNumber,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER},
            #{engineFactoryId,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{mapKey,jdbcType=VARCHAR},
            #{relationScore,jdbcType=DOUBLE}, #{initialRelationalDegree,jdbcType=DOUBLE}, #{accumulativeTotalScore,jdbcType=INTEGER},
            #{transactionNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrix">
    insert into tb_relation_matrix
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="experimentsNumber != null">
        experiments_number,
      </if>
      <if test="cycleTimes != null">
        cycle_times,
      </if>
      <if test="engineFactoryId != null">
        engine_factory_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="mapKey != null">
        map_key,
      </if>
      <if test="relationScore != null">
        relation_score,
      </if>
      <if test="initialRelationalDegree != null">
        initial_relational_degree,
      </if>
      <if test="accumulativeTotalScore != null">
        accumulative_total_score,
      </if>
      <if test="transactionNumber != null">
        transaction_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="experimentsNumber != null">
        #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null">
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null">
        #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="mapKey != null">
        #{mapKey,jdbcType=VARCHAR},
      </if>
      <if test="relationScore != null">
        #{relationScore,jdbcType=DOUBLE},
      </if>
      <if test="initialRelationalDegree != null">
        #{initialRelationalDegree,jdbcType=DOUBLE},
      </if>
      <if test="accumulativeTotalScore != null">
        #{accumulativeTotalScore,jdbcType=INTEGER},
      </if>
      <if test="transactionNumber != null">
        #{transactionNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrixExample" resultType="java.lang.Integer">
    select count(*) from tb_relation_matrix
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_relation_matrix
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.experimentsNumber != null">
        experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null">
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryId != null">
        engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.mapKey != null">
        map_key = #{record.mapKey,jdbcType=VARCHAR},
      </if>
      <if test="record.relationScore != null">
        relation_score = #{record.relationScore,jdbcType=DOUBLE},
      </if>
      <if test="record.initialRelationalDegree != null">
        initial_relational_degree = #{record.initialRelationalDegree,jdbcType=DOUBLE},
      </if>
      <if test="record.accumulativeTotalScore != null">
        accumulative_total_score = #{record.accumulativeTotalScore,jdbcType=INTEGER},
      </if>
      <if test="record.transactionNumber != null">
        transaction_number = #{record.transactionNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_relation_matrix
    set id = #{record.id,jdbcType=INTEGER},
    experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
    cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
    engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
    supplier_id = #{record.supplierId,jdbcType=VARCHAR},
    map_key = #{record.mapKey,jdbcType=VARCHAR},
    relation_score = #{record.relationScore,jdbcType=DOUBLE},
    initial_relational_degree = #{record.initialRelationalDegree,jdbcType=DOUBLE},
    accumulative_total_score = #{record.accumulativeTotalScore,jdbcType=INTEGER},
    transaction_number = #{record.transactionNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrix">
    update tb_relation_matrix
    <set>
      <if test="experimentsNumber != null">
        experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null">
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null">
        engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="mapKey != null">
        map_key = #{mapKey,jdbcType=VARCHAR},
      </if>
      <if test="relationScore != null">
        relation_score = #{relationScore,jdbcType=DOUBLE},
      </if>
      <if test="initialRelationalDegree != null">
        initial_relational_degree = #{initialRelationalDegree,jdbcType=DOUBLE},
      </if>
      <if test="accumulativeTotalScore != null">
        accumulative_total_score = #{accumulativeTotalScore,jdbcType=INTEGER},
      </if>
      <if test="transactionNumber != null">
        transaction_number = #{transactionNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.TbRelationMatrix">
    update tb_relation_matrix
    set experiments_number        = #{experimentsNumber,jdbcType=INTEGER},
        cycle_times               = #{cycleTimes,jdbcType=INTEGER},
        engine_factory_id         = #{engineFactoryId,jdbcType=VARCHAR},
        supplier_id               = #{supplierId,jdbcType=VARCHAR},
        map_key                   = #{mapKey,jdbcType=VARCHAR},
        relation_score            = #{relationScore,jdbcType=DOUBLE},
        initial_relational_degree = #{initialRelationalDegree,jdbcType=DOUBLE},
        accumulative_total_score  = #{accumulativeTotalScore,jdbcType=INTEGER},
        transaction_number        = #{transactionNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO `tb_relation_matrix`(id, `experiments_number`, `cycle_times`, `engine_factory_id`, `supplier_id`, `map_key`, `relation_score`, `initial_relational_degree`, `accumulative_total_score`,
    `transaction_number`)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (NULL, #{item.experimentsNumber,jdbcType=INTEGER}, #{item.cycleTimes,jdbcType=INTEGER},
      #{item.engineFactoryId,jdbcType=VARCHAR}, #{item.supplierId,jdbcType=VARCHAR}, #{item.mapKey,jdbcType=VARCHAR},
      #{item.relationScore,jdbcType=DOUBLE}, #{item.initialRelationalDegree,jdbcType=DOUBLE}, #{item.accumulativeTotalScore,jdbcType=INTEGER},
      #{item.transactionNumber,jdbcType=INTEGER})
    </foreach>
  </insert>



  <resultMap id="GraphMap" type="cn.edu.zju.kpaperproject.vo.GraphVo">
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR"/>
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR"/>
    <result column="relation_score" property="relationScore" jdbcType="DOUBLE"/>

    <association property="tbEngineFactory" javaType="cn.edu.zju.kpaperproject.pojo.TbEngineFactory">
      <result column="engine_factory_location_g_x" property="engineFactoryLocationGX" jdbcType="DOUBLE"/>
      <result column="engine_factory_location_g_y" property="engineFactoryLocationGY" jdbcType="DOUBLE"/>
    </association>

    <association property="tbSupplier" javaType="cn.edu.zju.kpaperproject.pojo.TbSupplier">
      <result column="supplier_location_g_x" property="supplierLocationGX" jdbcType="DOUBLE"/>
      <result column="supplier_location_g_y" property="supplierLocationGY" jdbcType="DOUBLE"/>
    </association>

    <association property="tbEngineFactoryDynamic" javaType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic">
      <result column="engine_factory_total_assets_p" property="engineFactoryTotalAssetsP" jdbcType="INTEGER" />
    </association>
    <association property="tbSupplierDynamic" javaType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic">
      <result column="supplier_total_assets_p" property="supplierTotalAssetsP" jdbcType="INTEGER" />
    </association>
  </resultMap>
  <select id="selectPositionByCycleTime" resultMap="GraphMap">
    SELECT
      tb_engine_factory.engine_factory_id,
      tb_engine_factory.engine_factory_location_g_x,
      tb_engine_factory.engine_factory_location_g_y,
      tb_supplier.supplier_id,
      tb_supplier.supplier_location_g_x,
      tb_supplier.supplier_location_g_y,
      tb_relation_matrix.relation_score,
      tb_engine_factory_dynamic.engine_factory_total_assets_p,
      tb_supplier_dynamic.supplier_total_assets_p
    FROM
      tb_relation_matrix
        INNER JOIN tb_engine_factory ON tb_engine_factory.cycle_times = tb_relation_matrix.cycle_times AND tb_engine_factory.engine_factory_id = tb_relation_matrix.engine_factory_id
        INNER JOIN tb_supplier ON tb_supplier.cycle_times = tb_engine_factory.cycle_times AND tb_supplier.supplier_id = tb_relation_matrix.supplier_id
        INNER JOIN tb_supplier_dynamic ON tb_supplier_dynamic.cycle_times = tb_relation_matrix.cycle_times AND tb_supplier_dynamic.supplier_id = tb_relation_matrix.supplier_id
        INNER JOIN tb_engine_factory_dynamic ON tb_engine_factory_dynamic.cycle_times = tb_relation_matrix.cycle_times AND tb_engine_factory_dynamic.engine_factory_id = tb_relation_matrix.engine_factory_id
    WHERE
      tb_relation_matrix.cycle_times = #{cycleTimes}
  </select>
</mapper>