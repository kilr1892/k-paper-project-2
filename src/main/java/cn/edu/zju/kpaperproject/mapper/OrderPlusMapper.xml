<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.OrderPlusMapper">
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.OrderPlus">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="experiments_number" property="experimentsNumber" jdbcType="INTEGER"/>
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER"/>
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR"/>
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR"/>
    <result column="engine_to_supplier_ap" property="engineToSupplierAp" jdbcType="DOUBLE"/>
    <result column="supplier_engine_to_ap" property="supplierEngineToAp" jdbcType="DOUBLE"/>
    <result column="engine_whether_perform_contract" property="engineWhetherPerformContract" jdbcType="BIT"/>
    <result column="supplier_whether_perform_contract" property="supplierWhetherPerformContract" jdbcType="BIT"/>
    <result column="supplier_actual_price_p" property="supplierActualPriceP" jdbcType="INTEGER"/>
    <result column="supplier_actual_quality_qs" property="supplierActualQualityQs" jdbcType="INTEGER"/>
    <result column="supplier_actual_number_m" property="supplierActualNumberM" jdbcType="INTEGER"/>
    <result column="engine_factory_to_supplier_score" property="engineFactoryToSupplierScore" jdbcType="INTEGER"/>
    <result column="supplier_to_engine_factory_score" property="supplierToEngineFactoryScore" jdbcType="INTEGER"/>
    <result column="engine_factory_init_credit" property="engineFactoryInitCredit" jdbcType="DOUBLE"/>
    <result column="engine_factory_new_credit" property="engineFactoryNewCredit" jdbcType="DOUBLE"/>
    <result column="engine_factory_to_service_offer_price_low" property="engineFactoryToServiceOfferPriceLow" jdbcType="INTEGER"/>
    <result column="engine_factory_to_service_offer_price_upper" property="engineFactoryToServiceOfferPriceUpper" jdbcType="INTEGER"/>
    <result column="supplier_init_credit" property="supplierInitCredit" jdbcType="DOUBLE"/>
    <result column="supplier_new_credit" property="supplierNewCredit" jdbcType="DOUBLE"/>
    <result column="relationship_strength" property="relationshipStrength" jdbcType="DOUBLE"/>
    <result column="engine_factory_profit" property="engineFactoryProfit" jdbcType="INTEGER"/>
    <result column="supplier_profit" property="supplierProfit" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, experiments_number, cycle_times, engine_factory_id, supplier_id, engine_to_supplier_ap, 
    supplier_engine_to_ap, engine_whether_perform_contract, supplier_whether_perform_contract, 
    supplier_actual_price_p, supplier_actual_quality_qs, supplier_actual_number_m, engine_factory_to_supplier_score, 
    supplier_to_engine_factory_score, engine_factory_init_credit, engine_factory_new_credit, 
    engine_factory_to_service_offer_price_low, engine_factory_to_service_offer_price_upper, 
    supplier_init_credit, supplier_new_credit, relationship_strength, engine_factory_profit, 
    supplier_profit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlusExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from order_plus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from order_plus
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_plus
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlusExample">
    delete from order_plus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlus">
    insert into order_plus (id, experiments_number, cycle_times, 
      engine_factory_id, supplier_id, engine_to_supplier_ap, 
      supplier_engine_to_ap, engine_whether_perform_contract, 
      supplier_whether_perform_contract, supplier_actual_price_p, 
      supplier_actual_quality_qs, supplier_actual_number_m, 
      engine_factory_to_supplier_score, supplier_to_engine_factory_score, 
      engine_factory_init_credit, engine_factory_new_credit, 
      engine_factory_to_service_offer_price_low, engine_factory_to_service_offer_price_upper, 
      supplier_init_credit, supplier_new_credit, relationship_strength, 
      engine_factory_profit, supplier_profit)
    values (#{id,jdbcType=INTEGER}, #{experimentsNumber,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, 
      #{engineFactoryId,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{engineToSupplierAp,jdbcType=DOUBLE}, 
      #{supplierEngineToAp,jdbcType=DOUBLE}, #{engineWhetherPerformContract,jdbcType=BIT}, 
      #{supplierWhetherPerformContract,jdbcType=BIT}, #{supplierActualPriceP,jdbcType=INTEGER}, 
      #{supplierActualQualityQs,jdbcType=INTEGER}, #{supplierActualNumberM,jdbcType=INTEGER}, 
      #{engineFactoryToSupplierScore,jdbcType=INTEGER}, #{supplierToEngineFactoryScore,jdbcType=INTEGER}, 
      #{engineFactoryInitCredit,jdbcType=DOUBLE}, #{engineFactoryNewCredit,jdbcType=DOUBLE}, 
      #{engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER}, #{engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER}, 
      #{supplierInitCredit,jdbcType=DOUBLE}, #{supplierNewCredit,jdbcType=DOUBLE}, #{relationshipStrength,jdbcType=DOUBLE}, 
      #{engineFactoryProfit,jdbcType=INTEGER}, #{supplierProfit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlus">
    insert into order_plus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="experimentsNumber != null">
        experiments_number,
      </if>
      <if test="cycleTimes != null">
        cycle_times,
      </if>
      <if test="engineFactoryId != null">
        engine_factory_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="engineToSupplierAp != null">
        engine_to_supplier_ap,
      </if>
      <if test="supplierEngineToAp != null">
        supplier_engine_to_ap,
      </if>
      <if test="engineWhetherPerformContract != null">
        engine_whether_perform_contract,
      </if>
      <if test="supplierWhetherPerformContract != null">
        supplier_whether_perform_contract,
      </if>
      <if test="supplierActualPriceP != null">
        supplier_actual_price_p,
      </if>
      <if test="supplierActualQualityQs != null">
        supplier_actual_quality_qs,
      </if>
      <if test="supplierActualNumberM != null">
        supplier_actual_number_m,
      </if>
      <if test="engineFactoryToSupplierScore != null">
        engine_factory_to_supplier_score,
      </if>
      <if test="supplierToEngineFactoryScore != null">
        supplier_to_engine_factory_score,
      </if>
      <if test="engineFactoryInitCredit != null">
        engine_factory_init_credit,
      </if>
      <if test="engineFactoryNewCredit != null">
        engine_factory_new_credit,
      </if>
      <if test="engineFactoryToServiceOfferPriceLow != null">
        engine_factory_to_service_offer_price_low,
      </if>
      <if test="engineFactoryToServiceOfferPriceUpper != null">
        engine_factory_to_service_offer_price_upper,
      </if>
      <if test="supplierInitCredit != null">
        supplier_init_credit,
      </if>
      <if test="supplierNewCredit != null">
        supplier_new_credit,
      </if>
      <if test="relationshipStrength != null">
        relationship_strength,
      </if>
      <if test="engineFactoryProfit != null">
        engine_factory_profit,
      </if>
      <if test="supplierProfit != null">
        supplier_profit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="experimentsNumber != null">
        #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null">
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null">
        #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="engineToSupplierAp != null">
        #{engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="supplierEngineToAp != null">
        #{supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="engineWhetherPerformContract != null">
        #{engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierWhetherPerformContract != null">
        #{supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierActualPriceP != null">
        #{supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="supplierActualQualityQs != null">
        #{supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierActualNumberM != null">
        #{supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToSupplierScore != null">
        #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="supplierToEngineFactoryScore != null">
        #{supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryInitCredit != null">
        #{engineFactoryInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryNewCredit != null">
        #{engineFactoryNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryToServiceOfferPriceLow != null">
        #{engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToServiceOfferPriceUpper != null">
        #{engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
      </if>
      <if test="supplierInitCredit != null">
        #{supplierInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="supplierNewCredit != null">
        #{supplierNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="relationshipStrength != null">
        #{relationshipStrength,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryProfit != null">
        #{engineFactoryProfit,jdbcType=INTEGER},
      </if>
      <if test="supplierProfit != null">
        #{supplierProfit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlusExample" resultType="java.lang.Integer">
    select count(*) from order_plus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_plus
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.experimentsNumber != null">
        experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null">
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryId != null">
        engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.engineToSupplierAp != null">
        engine_to_supplier_ap = #{record.engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="record.supplierEngineToAp != null">
        supplier_engine_to_ap = #{record.supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="record.engineWhetherPerformContract != null">
        engine_whether_perform_contract = #{record.engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="record.supplierWhetherPerformContract != null">
        supplier_whether_perform_contract = #{record.supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="record.supplierActualPriceP != null">
        supplier_actual_price_p = #{record.supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="record.supplierActualQualityQs != null">
        supplier_actual_quality_qs = #{record.supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="record.supplierActualNumberM != null">
        supplier_actual_number_m = #{record.supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryToSupplierScore != null">
        engine_factory_to_supplier_score = #{record.engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="record.supplierToEngineFactoryScore != null">
        supplier_to_engine_factory_score = #{record.supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryInitCredit != null">
        engine_factory_init_credit = #{record.engineFactoryInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryNewCredit != null">
        engine_factory_new_credit = #{record.engineFactoryNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryToServiceOfferPriceLow != null">
        engine_factory_to_service_offer_price_low = #{record.engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryToServiceOfferPriceUpper != null">
        engine_factory_to_service_offer_price_upper = #{record.engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
      </if>
      <if test="record.supplierInitCredit != null">
        supplier_init_credit = #{record.supplierInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="record.supplierNewCredit != null">
        supplier_new_credit = #{record.supplierNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="record.relationshipStrength != null">
        relationship_strength = #{record.relationshipStrength,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryProfit != null">
        engine_factory_profit = #{record.engineFactoryProfit,jdbcType=INTEGER},
      </if>
      <if test="record.supplierProfit != null">
        supplier_profit = #{record.supplierProfit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_plus
    set id = #{record.id,jdbcType=INTEGER},
    experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
    cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
    engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
    supplier_id = #{record.supplierId,jdbcType=VARCHAR},
    engine_to_supplier_ap = #{record.engineToSupplierAp,jdbcType=DOUBLE},
    supplier_engine_to_ap = #{record.supplierEngineToAp,jdbcType=DOUBLE},
    engine_whether_perform_contract = #{record.engineWhetherPerformContract,jdbcType=BIT},
    supplier_whether_perform_contract = #{record.supplierWhetherPerformContract,jdbcType=BIT},
    supplier_actual_price_p = #{record.supplierActualPriceP,jdbcType=INTEGER},
    supplier_actual_quality_qs = #{record.supplierActualQualityQs,jdbcType=INTEGER},
    supplier_actual_number_m = #{record.supplierActualNumberM,jdbcType=INTEGER},
    engine_factory_to_supplier_score = #{record.engineFactoryToSupplierScore,jdbcType=INTEGER},
    supplier_to_engine_factory_score = #{record.supplierToEngineFactoryScore,jdbcType=INTEGER},
    engine_factory_init_credit = #{record.engineFactoryInitCredit,jdbcType=DOUBLE},
    engine_factory_new_credit = #{record.engineFactoryNewCredit,jdbcType=DOUBLE},
    engine_factory_to_service_offer_price_low = #{record.engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER},
    engine_factory_to_service_offer_price_upper = #{record.engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
    supplier_init_credit = #{record.supplierInitCredit,jdbcType=DOUBLE},
    supplier_new_credit = #{record.supplierNewCredit,jdbcType=DOUBLE},
    relationship_strength = #{record.relationshipStrength,jdbcType=DOUBLE},
    engine_factory_profit = #{record.engineFactoryProfit,jdbcType=INTEGER},
    supplier_profit = #{record.supplierProfit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlus">
    update order_plus
    <set>
      <if test="experimentsNumber != null">
        experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null">
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null">
        engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="engineToSupplierAp != null">
        engine_to_supplier_ap = #{engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="supplierEngineToAp != null">
        supplier_engine_to_ap = #{supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="engineWhetherPerformContract != null">
        engine_whether_perform_contract = #{engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierWhetherPerformContract != null">
        supplier_whether_perform_contract = #{supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierActualPriceP != null">
        supplier_actual_price_p = #{supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="supplierActualQualityQs != null">
        supplier_actual_quality_qs = #{supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierActualNumberM != null">
        supplier_actual_number_m = #{supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToSupplierScore != null">
        engine_factory_to_supplier_score = #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="supplierToEngineFactoryScore != null">
        supplier_to_engine_factory_score = #{supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryInitCredit != null">
        engine_factory_init_credit = #{engineFactoryInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryNewCredit != null">
        engine_factory_new_credit = #{engineFactoryNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryToServiceOfferPriceLow != null">
        engine_factory_to_service_offer_price_low = #{engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToServiceOfferPriceUpper != null">
        engine_factory_to_service_offer_price_upper = #{engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
      </if>
      <if test="supplierInitCredit != null">
        supplier_init_credit = #{supplierInitCredit,jdbcType=DOUBLE},
      </if>
      <if test="supplierNewCredit != null">
        supplier_new_credit = #{supplierNewCredit,jdbcType=DOUBLE},
      </if>
      <if test="relationshipStrength != null">
        relationship_strength = #{relationshipStrength,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryProfit != null">
        engine_factory_profit = #{engineFactoryProfit,jdbcType=INTEGER},
      </if>
      <if test="supplierProfit != null">
        supplier_profit = #{supplierProfit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.OrderPlus">
    update order_plus
    set experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      cycle_times = #{cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      engine_to_supplier_ap = #{engineToSupplierAp,jdbcType=DOUBLE},
      supplier_engine_to_ap = #{supplierEngineToAp,jdbcType=DOUBLE},
      engine_whether_perform_contract = #{engineWhetherPerformContract,jdbcType=BIT},
      supplier_whether_perform_contract = #{supplierWhetherPerformContract,jdbcType=BIT},
      supplier_actual_price_p = #{supplierActualPriceP,jdbcType=INTEGER},
      supplier_actual_quality_qs = #{supplierActualQualityQs,jdbcType=INTEGER},
      supplier_actual_number_m = #{supplierActualNumberM,jdbcType=INTEGER},
      engine_factory_to_supplier_score = #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      supplier_to_engine_factory_score = #{supplierToEngineFactoryScore,jdbcType=INTEGER},
      engine_factory_init_credit = #{engineFactoryInitCredit,jdbcType=DOUBLE},
      engine_factory_new_credit = #{engineFactoryNewCredit,jdbcType=DOUBLE},
      engine_factory_to_service_offer_price_low = #{engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER},
      engine_factory_to_service_offer_price_upper = #{engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
      supplier_init_credit = #{supplierInitCredit,jdbcType=DOUBLE},
      supplier_new_credit = #{supplierNewCredit,jdbcType=DOUBLE},
      relationship_strength = #{relationshipStrength,jdbcType=DOUBLE},
      engine_factory_profit = #{engineFactoryProfit,jdbcType=INTEGER},
      supplier_profit = #{supplierProfit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insertList" parameterType="list">
    insert into order_plus (id,experiments_number, cycle_times,
    engine_factory_id, supplier_id, engine_to_supplier_ap,
    supplier_engine_to_ap, engine_whether_perform_contract,
    supplier_whether_perform_contract, supplier_actual_price_p,
    supplier_actual_quality_qs, supplier_actual_number_m,
    engine_factory_to_supplier_score, supplier_to_engine_factory_score,
    engine_factory_init_credit, engine_factory_new_credit,
    engine_factory_to_service_offer_price_low, engine_factory_to_service_offer_price_upper,
    supplier_init_credit, supplier_new_credit, relationship_strength,
    engine_factory_profit, supplier_profit)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (null ,
      #{item.experimentsNumber,jdbcType=INTEGER}, #{item.cycleTimes,jdbcType=INTEGER},
      #{item.engineFactoryId,jdbcType=VARCHAR}, #{item.supplierId,jdbcType=VARCHAR}, #{item.engineToSupplierAp,jdbcType=DOUBLE},
      #{item.supplierEngineToAp,jdbcType=DOUBLE}, #{item.engineWhetherPerformContract,jdbcType=BIT},
      #{item.supplierWhetherPerformContract,jdbcType=BIT}, #{item.supplierActualPriceP,jdbcType=INTEGER},
      #{item.supplierActualQualityQs,jdbcType=INTEGER}, #{item.supplierActualNumberM,jdbcType=INTEGER},
      #{item.engineFactoryToSupplierScore,jdbcType=INTEGER}, #{item.supplierToEngineFactoryScore,jdbcType=INTEGER},
      #{item.engineFactoryInitCredit,jdbcType=DOUBLE}, #{item.engineFactoryNewCredit,jdbcType=DOUBLE},
      #{item.engineFactoryToServiceOfferPriceLow,jdbcType=INTEGER}, #{item.engineFactoryToServiceOfferPriceUpper,jdbcType=INTEGER},
      #{item.supplierInitCredit,jdbcType=DOUBLE}, #{item.supplierNewCredit,jdbcType=DOUBLE}, #{item.relationshipStrength,jdbcType=DOUBLE},
      #{item.engineFactoryProfit,jdbcType=INTEGER}, #{item.supplierProfit,jdbcType=INTEGER})
     </foreach>
  </insert>

</mapper>